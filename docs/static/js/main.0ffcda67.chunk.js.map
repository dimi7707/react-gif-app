{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useGifsFetch.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","elements","type","value","onChange","target","GifGridItem","id","title","image","className","src","alt","getGifs","category","a","url","encodeURI","fetch","resp","json","data","filteringData","map","gif","images","original","GifGrid","searchIndex","loading","state","setstate","useEffect","then","result","setTimeout","useGifsFetch","GifExpertApp","categories","index","ReactDOM","render","document","getElementById"],"mappings":"mMAmCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAErB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAS,GACtBP,GAAc,SAACQ,GAAD,OAAgBN,GAAhB,mBAA+BM,QAM/C,SACE,uBACEC,KAAK,OACLC,MAAQR,EACRS,SAlBoB,SAACN,GACzBF,EAAcE,EAAEO,OAAOF,a,QCUZG,EAfK,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAChC,OACE,sBAAKC,UAAU,mCAAf,UACE,qBAAKA,UAAU,cAAcC,IAAMF,EAAQG,IAAMJ,GAAcD,GAC/D,mBAAGG,UAAU,cAAb,SAA6BF,Q,uBCPtBK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACfC,EADe,0FAC2EC,UAAWH,IADtF,SAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAgBD,EAAKE,KAAI,SAACC,GAAD,cAC7B,CACEjB,GAAIiB,EAAIjB,GACRC,MAAOgB,EAAIhB,MACXC,MAAK,UAAEe,EAAIC,cAAN,iBAAE,EAAYC,gBAAd,aAAE,EAAsBV,QATZ,kBAadM,GAbc,4CAAH,sDCgCLK,EA3BC,SAAC,GAA+B,IAA7Bb,EAA4B,EAA5BA,SAAUc,EAAkB,EAAlBA,YAE3B,ECH0B,SAAEd,GAE5B,MAA0BpB,mBAAS,CAAE2B,KAAM,GAAIQ,SAAS,IAAxD,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OAVAC,qBAAU,WACRnB,EAAQC,GACLmB,MAAM,SAAAC,GACLC,YAAW,WACTJ,EAAS,CAAEV,KAAMa,EAAQL,SAAS,MACjC,UAGN,CAAEf,IAEEgB,EDX0BM,CAAatB,GAAjCW,EAAb,EAAQJ,KAAaQ,EAArB,EAAqBA,QAErB,OACE,sBAAKnB,UAAU,0BAAf,UACE,gDAAoBkB,EAApB,oBAA+C,4BAAKd,IAApD,OACEe,GAAY,2CACd,oBAAInB,UAAU,YAAd,SAEIe,EAAOF,KAAI,SAACd,GAAD,OACT,cAAC,EAAD,eAEOA,GADCA,EAAMF,aEQX8B,EArBM,WAEnB,MAAoC3C,mBAAS,IAA7C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACE,qCACE,oBAAIiB,UAAU,oCAAd,4BACA,yFACA,cAAC,EAAD,CAAajB,cAAgBA,IAC7B,uBACA,6BAEI6C,EAAWf,KAAI,SAACT,EAAUyB,GAAX,OACb,cAAC,EAAD,CAASzB,SAAWA,EAAyBc,YAAcU,EAAWtC,QAAjCuC,Y,MCVjDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0ffcda67.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.length > 2) {\n      setCategories((elements) => [ inputValue, ...elements])\n    }\n\n  };\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <input\n        type=\"text\"\n        value={ inputValue }\n        onChange={  handleInputChange }\n      />\n    </form>\n  )\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n};\n\nexport default AddCategory;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst GifGridItem = ({ id, title, image }) => {\n  return (\n    <div className=\"classic-card animate__backInDown\">\n      <img className=\"is-centered\" src={ image } alt={ title } key={ id } />\n      <p className=\"text-center\">{ title }</p>\n    </div>\n  )\n}\n\nGifGridItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired\n};\n\nexport default GifGridItem\n","export const getGifs = async ( category ) => {\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=O9isww62Z0sCiAsI0acO4zOypgnum8Aw&q=${ encodeURI( category ) }`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const filteringData = data.map((gif) => (\n    {\n      id: gif.id,\n      title: gif.title,\n      image: gif.images?.original?.url\n    }\n  ));\n\n  return filteringData;\n};\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport GifGridItem from './GifGridItem';\nimport { useGifsFetch } from '../hooks/useGifsFetch';\n\nconst GifGrid = ({ category, searchIndex }) => {\n\n  const { data:images, loading } = useGifsFetch(category);\n\n  return (\n    <div className=\"separator-result-search\">\n      <i> Busqueda nro: { searchIndex } - categor√≠a: <b>{ category }</b> </i>\n      { loading &&  <p>Loading...</p> }\n      <ol className=\"card-grid\">\n        {\n          images.map((image) => (\n            <GifGridItem\n              key={ image.id }\n              { ...image }\n            />\n          ))\n        }\n      </ol>\n    </div>\n  )\n};\n\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired,\n  searchIndex: PropTypes.number.isRequired\n};\n\nexport default GifGrid;\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useGifsFetch = ( category ) => {\n\n  const [state, setstate] = useState({ data: [], loading: true });\n\n  useEffect(() => {\n    getGifs(category)\n      .then( result => {\n        setTimeout(() => {\n          setstate({ data: result, loading: false });\n        }, 3000);\n\n      })\n  }, [ category ]);\n\n  return state;\n};\n","import React, { useState } from 'react';\nimport AddCategory from './AddCategory';\nimport GifGrid from './GifGrid';\n\nconst GifExpertApp = () => {\n\n  const [categories, setCategories] = useState([]);\n\n  return (\n    <>\n      <h2 className=\"animate__animated animate__bounce\"> GifexpertApp </h2>\n      <h5>Ingresa una categoria para visualizar gifs relacionados</h5>\n      <AddCategory setCategories={ setCategories } />\n      <hr />\n      <ol>\n        {\n          categories.map((category, index) => (\n            <GifGrid category={ category } key={ index } searchIndex={ categories.length } />\n          ))\n        }\n      </ol>\n    </>\n  )\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './components/GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}